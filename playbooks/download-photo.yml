---

- name: Automation for grabbing screenshot from video
  hosts: all
  gather_facts: false

  vars:
    _video_url: "{{ video_url | mandatory }}"
    _timestamp: "{{ video_timestamp | default(10) }}"
    _picoshare_url: "{{ picoshare_url | mandatory }}"

  tasks:
    - name: Create temp directory
      register: tmpdir
      ansible.builtin.tempfile:
        state: directory

    - name: Download video
      changed_when: true
      ansible.builtin.command:
        creates: "{{ tmpdir.path }}/video.mp4"
        cmd: |
          yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' "{{ _video_url }}" --output {{ tmpdir.path }}/video.mp4

    - name: Grab screenshot from the timestamp
      changed_when: true
      ansible.builtin.command:
        creates: "{{ tmpdir.path }}/output.png"
        cmd: |
          ffmpeg -ss {{ _timestamp | seconds_to_timestamp }} -i {{ tmpdir.path }}/video.mp4 -frames:v 1 -q:v 2 {{ tmpdir.path }}/output.png

      # TODO: Switch to the ansible.builtin.uri module
    - name: Upload image to picoshare # noqa command-instead-of-module
      register: response
      no_log: "{{ nolog | default(True, True) }}"
      changed_when: true
      ansible.builtin.command:
        cmd: |
          curl -skL -X POST -F "file=@{{ tmpdir.path }}/output.png" "{{ _picoshare_url }}"

    - name: Share URL
      vars:
        response_data: "{{ response.stdout | from_json }}"
      ansible.builtin.debug:
        msg: "{{ _picoshare_url.split('/api')[0] + '/-' + response_data.id }}"

